method = "multinom",
preProc = c("pca"),
trControl = trainControl(method = "cv", number = 5),
trace = FALSE
)
roma_log_pred_pca <- predict(roma_log_mod_pca,romaTest)
confusionMatrix(roma_log_pred_pca, as.factor(romaTest$outcome))
confusionMatrix(roma_log_pred, as.factor(romaTest$outcome))
confusionMatrix(roma_log_pred_pca, as.factor(romaTest$outcome))
confusionMatrix(roma_log_pred_pca, as.factor(romaTest$outcome))
confusionMatrix(roma_log_pred, as.factor(romaTest$outcome))
confusionMatrix(roma_log_pred_pca, as.factor(romaTest$outcome))
1/7
2/6
4/19
confusionMatrix(roma_log_pred, as.factor(romaTest$outcome),mode = "prec_recall")
confusionMatrix(roma_log_pred, as.factor(romaTest$outcome))
confusionMatrix(roma_log_pred, as.factor(romaTest$outcome),mode = "prec_recall")
confusionMatrix(roma_log_pred_pca, as.factor(romaTest$outcome),mode = "prec_recall")
glimpse(roma)
timeSlices <- createTimeSlices(1:nrow(roma),
timeSlices <- createTimeSlices(1:nrow(roma),
initialWindow = 100, # Initial dataset
horizon = 1, # Predicting one match ahead
fixedWindow = FALSE) # Ensuring cumulative training set)
timeSlices
dim(roma)
trainSlices <- timeSlices[[1]]
testSlices <- timeSlices[[2]]
trainSlices %>% glimpse()
trainSlices %>% class()
myTimeControl <- trainControl(method="timeslice",
initialWindow = 100,
horizon = 1,
fixedWindow = FALSE)
plsFitTime <- train(outcome ~ .,
data=roma,
method="multinom",
preProc=c("pca"),
trControl = myTimeConrol)
myTimeControl <- trainControl(method="timeslice",
initialWindow = 100,
horizon = 1,
fixedWindow = FALSE)
myTimeControl
plsFitTime <- train(outcome ~ .,
data=roma,
method="multinom",
preProc=c("pca"),
trControl = myTimeControl)
plsFitTime %>% length()
plsFitTime
plsFitTime$results
plsFitTime$pred
plsFitTime$finalModel
class(plsFitTime)
logPred <- train(outcome ~ .,
data=roma,
method="multinom",
preProc=c("pca"),
trControl = myTimeControl)
logPred
logPred$method
logPred$modelInfo
logPred$modelType
logPred$results
logPred$pred
logPred$bestTune
logPred$call
logPred$dots
logPred$metric
roma %>% dim()
myTimeControl <- trainControl(method="timeslice",
initialWindow = 100,
horizon = 1,
fixedWindow = FALSE)
logMod <- train(outcome ~ .,
data=romaTrain,
method="multinom",
preProc=c("pca"),
trControl = myTimeControl)
logPreds <-predict(logPred, romaTest)
rm(logPred)
logPreds
logPreds
romaTest
romaTest$outcome
romaTest$outcome
logPreds
logPreds==romaTest$outcome
table(logPreds==romaTest$outcome)
20/32
library(caretEnsemble)
library(randomForest)
library(tidyverse)
library(kableExtra)
library(caret)
load(file="00 Data/full_raw_scraped.rdata")
load(file="00 Data/italy_elos.rdata")
italy_elos$Club <- as.factor(italy_elos$Club)
# Variable Importance Plot
raw_to_filter <- df_raw %>%
select(-season,-round,-goals_h,-goals_a,-Team_h,-Team_a,-match_id,-match_date)
Filter_Forest <- randomForest(outcome ~ ., data=raw_to_filter)
# importance(Filter_Forest)
varImpPlot(Filter_Forest,
main = "Feature Importance in Predicting Match Outcome",n.var = ncol(raw_to_filter))
Variables_To_Drop <- c("pen_h","pen_a","shot_off_fk_a","shot_off_fk_h",
"shot_on_fk_h","shot_on_fk_a","shots_sp_on_h","shots_sp_on_a",
"shots_sp_off_h","shots_sp_off_a")
# removing 'unimportant' variables, drops from 14 features
df_raw <- df_raw %>% select(-Variables_To_Drop)
glimpse(fdf_raw)
knitr::opts_chunk$set(echo = TRUE)
load(file="00 Data/Team_split_Data.rdata")
glimpse(final_data)
names(final_data)
final_data[[1]] %>% class()
final_data[[1]] %>% glimpse()
final_data[[2]] %>% glimpse()
table(Roma$outcome)
Roma <- final_data[[2]]
table(Roma$outcome)
for(i in 1:lenth(final_data)){}
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- final_data[[i]]$Team
print(tmp_name,table(tmp$outcome))
}
length(final_data)
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team
print(tmp_name,table(tmp$outcome))
}
final_data[1]
final_data[[1]]
final_data[[1]] %>% class()
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team
print(tmp_name)
}
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team %>% unique()
print(tmp_name)
}
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team %>% unique() %>% as.character()
print(tmp_name)
}
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team %>% unique() %>% as.character()
print(tmp_name)
table(tmp$outcome)/nrow(tmp)
}
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team %>% unique() %>% as.character()
print(tmp_name)
print(table(tmp$outcome)/nrow(tmp))
}
table(tmp$outcome)/nrow(tmp)
as.vector(table(tmp$outcome)/nrow(tmp))
as.vector(table(tmp$outcome)/nrow(tmp))
outcomes <- data.frame(team=NA,D=NA,L=NA,W=NA)
for(i in 1:length(final_data)){
tmp <- final_data[[i]]
tmp_name <- tmp$Team %>% unique() %>% as.character()
outcomes[i,1] <- tmp_name
out<-as.vector(table(tmp$outcome)/nrow(tmp))
outcomes[i,2] <- out[1]
outcomes[i,3] <- out[2]
outcomes[i,4] <- out[3]
}
outcomes
outcomes %>% gather("Outcome","Prop",2:4)
glimpse(tmp)
load(file="00 Data/Team_split_Data.rdata")
outcomes <- data.frame(team=NA,D=NA,L=NA,W=NA)
for(i in 1:length(final_data)){
tmp <- final_data[[i]] %>% filter(season=="2019-20")
tmp_name <- tmp$Team %>% unique() %>% as.character()
outcomes[i,1] <- tmp_name
out<-as.vector(table(tmp$outcome)/nrow(tmp))
outcomes[i,2] <- out[1]
outcomes[i,3] <- out[2]
outcomes[i,4] <- out[3]
}
outcome_viz <- outcomes %>% gather("Outcome","Prop",2:4)
outcome_viz
load(file="00 Data/Team_split_Data.rdata")
outcomes <- data.frame(team=NA,D=NA,L=NA,W=NA)
for(i in 1:length(final_data)){
tmp <- final_data[[i]] %>% filter(!season=="2019-20")
tmp_name <- tmp$Team %>% unique() %>% as.character()
outcomes[i,1] <- tmp_name
out<-as.vector(table(tmp$outcome)/nrow(tmp))
outcomes[i,2] <- out[1]
outcomes[i,3] <- out[2]
outcomes[i,4] <- out[3]
}
outcome_viz <- outcomes %>% gather("Outcome","Prop",2:4)
outcome_viz
table(outcome_viz$team)
outcome_viz %>5 filter(outcome=="W")
outcome_viz %>5 filter(Outcome=="W")
outcome_viz %>% filter(Outcome=="W")
outcome_viz %>% filter(Outcome=="W") %>% arrange(Prop)
outcome_viz %>% filter(Outcome=="W") %>% arrange(-Prop) %>%
outcome_viz %>% filter(Outcome=="W") %>% arrange(-Prop) %>% select(team) %>% as.vector()
ggplot(outcome_viz, aes(x="", y=Prop, fill=Prop)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(outcome_viz, aes(x="", y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(outcome_viz, aes(x="", y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
facet_wrap(facets = "team")
ggplot(outcome_viz, aes(x="", y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
#facet_wrap(facets = "team") +
theme_void() # remove background, grid, numeric labels
ggplot(outcome_viz, aes(x="", y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() # remove background, grid, numeric labels
ggplot(outcome_viz, aes(x="", y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#008c45", "#f4f5f0", "#cd212a"))
ggplot(outcome_viz, aes(x="", y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
ggplot(outcome_viz, aes(x=team, y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(outcome_viz, aes(x=team, y=Outcome, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
outcome_viz
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar()
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
#  coord_polar() +
coord_polar(prop, start=0)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
#  coord_polar() +
coord_polar(Prop, start=0)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar(Prop, start=0)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar(y, start=0)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
coord_polar("y", start=0)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
#coord_polar("y", start=0) +
facet_wrap(facets = "team")
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1) +
#coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
#coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
glimpse(outcome_viz)
ordered_by_W <- outcome_viz %>% filter(Outcome=="W") %>% arrange(-Prop) %>% select(team) %>% as.vector()
ordered_by_W
outcome_viz$team <- factor(outcome_viz$team,levels = ordered_by_W$team)
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
#coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_void() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
#coord_polar("y", start=0) +
facet_wrap(facets = "team") +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
#coord_polar("y", start=0) +
facet_wrap(facets = "team",nrow = 6) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
#coord_polar("y", start=0) +
facet_wrap(facets = "team",nrow = 7) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
#coord_polar("y", start=0) +
facet_wrap(facets = "team",nrow = 8) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45")) +
xlab("") + ylab("") + ggtitle("Match Outcome Distribution by Team")
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
facet_wrap(facets = "team",nrow = 8) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45")) +
xlab("") + ylab("") + ggtitle("Match Outcome Distribution by Team") +
theme(legend.position="bottom",plot.title = element_text(hjust = 0.5))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
facet_wrap(facets = "team",nrow = 8) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"),labels=c("Draw","Loss","Win")) +
xlab("") + ylab("") + ggtitle("Match Outcome Distribution by Team") +
theme(legend.position="bottom",plot.title = element_text(hjust = 0.5))
outcome_viz$Outcome <- factor(outcome_viz$Outcome,levels = c("W","D","L"))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
facet_wrap(facets = "team",nrow = 8) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#f4f5f0", "#cd212a", "#008c45"),labels=c("Draw","Loss","Win")) +
xlab("") + ylab("") + ggtitle("Match Outcome Distribution by Team") +
theme(legend.position="bottom",plot.title = element_text(hjust = 0.5))
ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
facet_wrap(facets = "team",nrow = 8) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#008c45","#f4f5f0", "#cd212a"),labels=c("Win","Draw","Loss")) +
xlab("") + ylab("") + ggtitle("Match Outcome Distribution by Team") +
theme(legend.position="bottom",plot.title = element_text(hjust = 0.5))
outcome_viz
outcome_viz %>% filter(Outcome=="W")
outcome_viz %>% filter(Outcome=="W") %>% arrange(Prop)
outcome_viz %>% filter(team=="Sampdoria")
outcome_viz %>% filter(team=="Juventus")
library(plotly)
p <- ggplot(outcome_viz, aes(x=Outcome, y=Prop, fill=Outcome)) +
geom_bar(stat="identity", width=1,colour="grey") +
facet_wrap(facets = "team",nrow = 8) +
theme_minimal() + # remove background, grid, numeric labels
scale_fill_manual(values=c("#008c45","#f4f5f0", "#cd212a"),labels=c("Win","Draw","Loss")) +
xlab("") + ylab("") + ggtitle("Match Outcome Distribution by Team") +
theme(legend.position="bottom",plot.title = element_text(hjust = 0.5)) +
labs(caption = "Outcomes for seasons 2015-16 - 2018-19")
ggplotly(p)
outcomes
load(file="00 Data/Team_split_Data.rdata")
outcomes <- data.frame(team=NA,D=NA,L=NA,W=NA)
for(i in 1:length(final_data)){
tmp <- final_data[[i]] %>% filter(!season=="2019-20")
tmp_name <- tmp$Team %>% unique() %>% as.character()
outcomes[i,1] <- tmp_name
out<-as.vector(table(tmp$outcome)/nrow(tmp))
outcomes[i,2] <- out[1]
outcomes[i,3] <- out[2]
outcomes[i,4] <- out[3]
}
out
outp1
out[1]
out[2]
out[3]
load(file="00 Data/Team_split_Data.rdata")
outcomes <- data.frame(team=NA,D=NA,L=NA,W=NA)
for(i in 1:length(final_data)){
tmp <- final_data[[i]] %>% filter(!season=="2019-20")
tmp_name <- tmp$Team %>% unique() %>% as.character()
outcomes[i,1] <- tmp_name
out<-as.vector(table(tmp$outcome)/nrow(tmp))
#outcomes[i,2] <- out[1]
#outcomes[i,3] <- out[2]
#outcomes[i,4] <- out[3]
}
length(final_data)
i
final_data[[27]] %>% glimpse()
tmp
nrow(tmp)
for(i in 1:length(final_data)){
tmp <- final_data[[i]] %>% filter(!season=="2019-20")
if (nrow(tmp)==0) {
next
}
tmp_name <- tmp$Team %>% unique() %>% as.character()
outcomes[i,1] <- tmp_name
out<-as.vector(table(tmp$outcome)/nrow(tmp))
#outcomes[i,2] <- out[1]
#outcomes[i,3] <- out[2]
#outcomes[i,4] <- out[3]
}
p
glimpse(Samp)
Samp <- final_data[[17]]
glimpse(Samp)
Samp_train <- filter(season%in%c("2015-16","2016-17","2017-18"))
Samp_validation <- filter(season%in%c("2018-19"))
Samp_holdout <- filter(season%in%c("2019-20"))
Samp_train <- filter(Season%in%c("2015-16","2016-17","2017-18"))
glimpse(Samp)
s1 <- read.csv("00 Data/Betting csvs/I1.csv",header = T,stringsAsFactors = F)
glimpse(s)
library(tidyverse)
glimpse(t1)
glimpse(s1)
s1 <- read.csv("00 Data/Betting csvs/I1.csv",header = T,stringsAsFactors = F)
s2 <- read.csv("00 Data/Betting csvs/I1 (1).csv.csv",header = T,stringsAsFactors = F)
s3 <- read.csv("00 Data/Betting csvs/I1 (2).csv.csv",header = T,stringsAsFactors = F)
s4 <- read.csv("00 Data/Betting csvs/I1 (3).csv.csv",header = T,stringsAsFactors = F)
s5 <- read.csv("00 Data/Betting csvs/I1 (4).csv.csv",header = T,stringsAsFactors = F)
s2 <- read.csv("00 Data/Betting csvs/I1 (1).csv.csv",header = T,stringsAsFactors = F)
s1 <- read.csv("00 Data/Betting csvs/I1.csv",header = T,stringsAsFactors = F)
s2 <- read.csv("00 Data/Betting csvs/I1 (1).csv",header = T,stringsAsFactors = F)
s3 <- read.csv("00 Data/Betting csvs/I1 (2).csv",header = T,stringsAsFactors = F)
s4 <- read.csv("00 Data/Betting csvs/I1 (3).csv]",header = T,stringsAsFactors = F)
s5 <- read.csv("00 Data/Betting csvs/I1 (4).csv",header = T,stringsAsFactors = F)
s4 <- read.csv("00 Data/Betting csvs/I1 (3).csv",header = T,stringsAsFactors = F)
betting_raw <- rbind(s1,s2,s3,s4,s5)
dim(s)
dim(s1)
dim(s12)
dim(s2)
dim(s3)
dim(s4)
dim(s5)
glimpse(s1)
library(tidyverse)
s1 <- read.csv("00 Data/Betting csvs/I1.csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)
s2 <- read.csv("00 Data/Betting csvs/I1 (1).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)
s3 <- read.csv("00 Data/Betting csvs/I1 (2).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)
s4 <- read.csv("00 Data/Betting csvs/I1 (3).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)
s5 <- read.csv("00 Data/Betting csvs/I1 (4).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)
betting_raw <- rbind(s1,s2,s3,s4,s5)
glimpse(betting_raw)
s1$Date
s2$Date
s3$Date
s4$Date
s5$Date
# Betting Data Processing
library(tidyverse)
s1 <- read.csv("00 Data/Betting csvs/I1.csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA) %>%
mutate(season="2019-20")
s2 <- read.csv("00 Data/Betting csvs/I1 (1).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)%>%
mutate(season="2018-19")
s3 <- read.csv("00 Data/Betting csvs/I1 (2).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA) %>%
mutate(season="2017-18")
s4 <- read.csv("00 Data/Betting csvs/I1 (3).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA) %>%
mutate(season="2016-27")
s5 <- read.csv("00 Data/Betting csvs/I1 (4).csv",header = T,stringsAsFactors = F) %>%
select(Date,HomeTeam,AwayTeam,B365H,B365A,B365D,BWH,BWD,BWA)%>%
mutate(season="2015-16")
betting_raw <- rbind(s1,s2,s3,s4,s5)
glimpse(betting_raw)
glimpse(df_raw)
table(df_raw$Team_a)
table(betting_raw$HomeTeam)
df_raw_names <- df_raw$Team_a %>% unique()
betting_names <- betting_raw$HomeTeam %>% unique()
df_raw_names
betting_names
betting_names%in%df_raw_names
!betting_names[betting_names%in%df_raw_names]
betting_names[!betting_names%in%df_raw_names]
betting_raw$HomeTeam <- ifelse(betting_raw$HomeTeam=="Verona","HellasVerona",
ifelse(betting_raw$HomeTeam=="Chievo","Chievoverona",betting_raw$HomeTeam))
betting_raw$AwayTeam <- ifelse(betting_raw$AwayTeam=="Verona","HellasVerona",
ifelse(betting_raw$AwayTeam=="Chievo","Chievoverona",betting_raw$AwayTeam))
table(betting_raw$HomeTeam%in%df_raw$Team_h)
